### YamlMime:ManagedReference
items:
- uid: StansAssets.IOS.XCode.FrameworkHandler
  commentId: T:StansAssets.IOS.XCode.FrameworkHandler
  id: FrameworkHandler
  parent: StansAssets.IOS.XCode
  children:
  - StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
  - StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray
  - StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
  langs:
  - csharp
  - vb
  name: FrameworkHandler
  nameWithType: FrameworkHandler
  fullName: StansAssets.IOS.XCode.FrameworkHandler
  type: Class
  source:
    id: FrameworkHandler
    path: ''
    startLine: 446
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.IOS.XCode
  syntax:
    content: public static class FrameworkHandler
    content.vb: Public Module FrameworkHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
  commentId: P:StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
  id: AvailableFrameworks
  parent: StansAssets.IOS.XCode.FrameworkHandler
  langs:
  - csharp
  - vb
  name: AvailableFrameworks
  nameWithType: FrameworkHandler.AvailableFrameworks
  fullName: StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
  type: Property
  source:
    id: AvailableFrameworks
    path: ''
    startLine: 450
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.IOS.XCode
  syntax:
    content: public static List<XCodeFramework> AvailableFrameworks { get; }
    parameters: []
    return:
      type: List{StansAssets.IOS.XCode.XCodeFramework}
    content.vb: Public Shared ReadOnly Property AvailableFrameworks As List(Of XCodeFramework)
  overload: StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
  commentId: P:StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
  id: DefaultFrameworks
  parent: StansAssets.IOS.XCode.FrameworkHandler
  langs:
  - csharp
  - vb
  name: DefaultFrameworks
  nameWithType: FrameworkHandler.DefaultFrameworks
  fullName: StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
  type: Property
  source:
    id: DefaultFrameworks
    path: ''
    startLine: 469
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.IOS.XCode
  syntax:
    content: public static List<XCodeFramework> DefaultFrameworks { get; }
    parameters: []
    return:
      type: List{StansAssets.IOS.XCode.XCodeFramework}
    content.vb: Public Shared ReadOnly Property DefaultFrameworks As List(Of XCodeFramework)
  overload: StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray
  commentId: M:StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray
  id: BaseFrameworksArray
  parent: StansAssets.IOS.XCode.FrameworkHandler
  langs:
  - csharp
  - vb
  name: BaseFrameworksArray()
  nameWithType: FrameworkHandler.BaseFrameworksArray()
  fullName: StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray()
  type: Method
  source:
    id: BaseFrameworksArray
    path: ''
    startLine: 496
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.IOS.XCode
  syntax:
    content: public static string[] BaseFrameworksArray()
    return:
      type: System.String[]
    content.vb: Public Shared Function BaseFrameworksArray As String()
  overload: StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: StansAssets.IOS.XCode
  commentId: N:StansAssets.IOS.XCode
  name: StansAssets.IOS.XCode
  nameWithType: StansAssets.IOS.XCode
  fullName: StansAssets.IOS.XCode
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks*
  commentId: Overload:StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
  name: AvailableFrameworks
  nameWithType: FrameworkHandler.AvailableFrameworks
  fullName: StansAssets.IOS.XCode.FrameworkHandler.AvailableFrameworks
- uid: List{StansAssets.IOS.XCode.XCodeFramework}
  commentId: '!:List{StansAssets.IOS.XCode.XCodeFramework}'
  definition: List`1
  name: List<XCodeFramework>
  nameWithType: List<XCodeFramework>
  fullName: List<StansAssets.IOS.XCode.XCodeFramework>
  nameWithType.vb: List(Of XCodeFramework)
  fullName.vb: List(Of StansAssets.IOS.XCode.XCodeFramework)
  name.vb: List(Of XCodeFramework)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StansAssets.IOS.XCode.XCodeFramework
    name: XCodeFramework
    nameWithType: XCodeFramework
    fullName: StansAssets.IOS.XCode.XCodeFramework
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StansAssets.IOS.XCode.XCodeFramework
    name: XCodeFramework
    nameWithType: XCodeFramework
    fullName: StansAssets.IOS.XCode.XCodeFramework
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks*
  commentId: Overload:StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
  name: DefaultFrameworks
  nameWithType: FrameworkHandler.DefaultFrameworks
  fullName: StansAssets.IOS.XCode.FrameworkHandler.DefaultFrameworks
- uid: StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray*
  commentId: Overload:StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray
  name: BaseFrameworksArray
  nameWithType: FrameworkHandler.BaseFrameworksArray
  fullName: StansAssets.IOS.XCode.FrameworkHandler.BaseFrameworksArray
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

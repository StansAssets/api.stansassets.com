### YamlMime:ManagedReference
items:
- uid: StansAssets.GoogleDoc.NamedRange
  commentId: T:StansAssets.GoogleDoc.NamedRange
  id: NamedRange
  parent: StansAssets.GoogleDoc
  children:
  - StansAssets.GoogleDoc.NamedRange.Cells
  - StansAssets.GoogleDoc.NamedRange.Id
  - StansAssets.GoogleDoc.NamedRange.Name
  - StansAssets.GoogleDoc.NamedRange.Range
  langs:
  - csharp
  - vb
  name: NamedRange
  nameWithType: NamedRange
  fullName: StansAssets.GoogleDoc.NamedRange
  type: Class
  source:
    id: NamedRange
    path: ''
    startLine: 245
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.GoogleDoc
  summary: "\nA named range.\n"
  example: []
  syntax:
    content: public class NamedRange
    content.vb: Public Class NamedRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: StansAssets.GoogleDoc.NamedRange.Id
  commentId: P:StansAssets.GoogleDoc.NamedRange.Id
  id: Id
  parent: StansAssets.GoogleDoc.NamedRange
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NamedRange.Id
  fullName: StansAssets.GoogleDoc.NamedRange.Id
  type: Property
  source:
    id: Id
    path: ''
    startLine: 251
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.GoogleDoc
  summary: "\nThe Id of the named range.\n"
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: StansAssets.GoogleDoc.NamedRange.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StansAssets.GoogleDoc.NamedRange.Name
  commentId: P:StansAssets.GoogleDoc.NamedRange.Name
  id: Name
  parent: StansAssets.GoogleDoc.NamedRange
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NamedRange.Name
  fullName: StansAssets.GoogleDoc.NamedRange.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 256
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.GoogleDoc
  summary: "\nThe name of the named range.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: StansAssets.GoogleDoc.NamedRange.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StansAssets.GoogleDoc.NamedRange.Cells
  commentId: P:StansAssets.GoogleDoc.NamedRange.Cells
  id: Cells
  parent: StansAssets.GoogleDoc.NamedRange
  langs:
  - csharp
  - vb
  name: Cells
  nameWithType: NamedRange.Cells
  fullName: StansAssets.GoogleDoc.NamedRange.Cells
  type: Property
  source:
    id: Cells
    path: ''
    startLine: 261
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.GoogleDoc
  summary: "\nThe cells inside the named range.\n"
  example: []
  syntax:
    content: public IEnumerable<ICellPointer> Cells { get; }
    parameters: []
    return:
      type: IEnumerable{StansAssets.GoogleDoc.ICellPointer}
    content.vb: Public ReadOnly Property Cells As IEnumerable(Of ICellPointer)
  overload: StansAssets.GoogleDoc.NamedRange.Cells*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StansAssets.GoogleDoc.NamedRange.Range
  commentId: P:StansAssets.GoogleDoc.NamedRange.Range
  id: Range
  parent: StansAssets.GoogleDoc.NamedRange
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: NamedRange.Range
  fullName: StansAssets.GoogleDoc.NamedRange.Range
  type: Property
  source:
    id: Range
    path: ''
    startLine: 267
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.GoogleDoc
  summary: "\nFirst and last points of the range\n"
  example: []
  syntax:
    content: public GridRange Range { get; }
    parameters: []
    return:
      type: StansAssets.GoogleDoc.GridRange
    content.vb: Public ReadOnly Property Range As GridRange
  overload: StansAssets.GoogleDoc.NamedRange.Range*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: StansAssets.GoogleDoc
  commentId: N:StansAssets.GoogleDoc
  name: StansAssets.GoogleDoc
  nameWithType: StansAssets.GoogleDoc
  fullName: StansAssets.GoogleDoc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StansAssets.GoogleDoc.NamedRange.Id*
  commentId: Overload:StansAssets.GoogleDoc.NamedRange.Id
  name: Id
  nameWithType: NamedRange.Id
  fullName: StansAssets.GoogleDoc.NamedRange.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StansAssets.GoogleDoc.NamedRange.Name*
  commentId: Overload:StansAssets.GoogleDoc.NamedRange.Name
  name: Name
  nameWithType: NamedRange.Name
  fullName: StansAssets.GoogleDoc.NamedRange.Name
- uid: StansAssets.GoogleDoc.NamedRange.Cells*
  commentId: Overload:StansAssets.GoogleDoc.NamedRange.Cells
  name: Cells
  nameWithType: NamedRange.Cells
  fullName: StansAssets.GoogleDoc.NamedRange.Cells
- uid: IEnumerable{StansAssets.GoogleDoc.ICellPointer}
  commentId: '!:IEnumerable{StansAssets.GoogleDoc.ICellPointer}'
  definition: IEnumerable`1
  name: IEnumerable<ICellPointer>
  nameWithType: IEnumerable<ICellPointer>
  fullName: IEnumerable<StansAssets.GoogleDoc.ICellPointer>
  nameWithType.vb: IEnumerable(Of ICellPointer)
  fullName.vb: IEnumerable(Of StansAssets.GoogleDoc.ICellPointer)
  name.vb: IEnumerable(Of ICellPointer)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StansAssets.GoogleDoc.ICellPointer
    name: ICellPointer
    nameWithType: ICellPointer
    fullName: StansAssets.GoogleDoc.ICellPointer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StansAssets.GoogleDoc.ICellPointer
    name: ICellPointer
    nameWithType: ICellPointer
    fullName: StansAssets.GoogleDoc.ICellPointer
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: StansAssets.GoogleDoc.NamedRange.Range*
  commentId: Overload:StansAssets.GoogleDoc.NamedRange.Range
  name: Range
  nameWithType: NamedRange.Range
  fullName: StansAssets.GoogleDoc.NamedRange.Range
- uid: StansAssets.GoogleDoc.GridRange
  commentId: T:StansAssets.GoogleDoc.GridRange
  parent: StansAssets.GoogleDoc
  name: GridRange
  nameWithType: GridRange
  fullName: StansAssets.GoogleDoc.GridRange
